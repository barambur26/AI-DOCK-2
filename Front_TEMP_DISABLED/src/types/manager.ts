// AI Dock Manager Types\n// TypeScript types for manager functionality\n\nimport { UserResponse } from './admin';\nimport { QuotaResponse } from './quota';\n\n// =============================================================================\n// DEPARTMENT TYPES\n// =============================================================================\n\nexport interface DepartmentInfo {\n  id: number;\n  name: string;\n  description?: string;\n  created_at?: string;\n}\n\n// =============================================================================\n// MANAGER USER MANAGEMENT TYPES\n// =============================================================================\n\nexport interface ManagerUserListResponse {\n  users: UserResponse[];\n  pagination: {\n    total_count: number;\n    page: number;\n    page_size: number;\n    total_pages: number;\n    has_next: boolean;\n    has_previous: boolean;\n  };\n  department: DepartmentInfo;\n  summary: {\n    total_users_in_department: number;\n    users_on_current_page: number;\n  };\n}\n\nexport interface ManagerUserCreateRequest {\n  email: string;\n  username: string;\n  full_name: string;\n  password: string;\n  role_id?: number;\n  job_title?: string;\n  phone_number?: string;\n}\n\nexport interface ManagerUserUpdateRequest {\n  full_name?: string;\n  job_title?: string;\n  phone_number?: string;\n  role_id?: number;\n  is_active?: boolean;\n}\n\nexport interface DepartmentUserStats {\n  department: DepartmentInfo;\n  user_stats: {\n    total_users: number;\n    active_users: number;\n    inactive_users: number;\n    recent_users: number;\n    users_by_role: Array<{\n      role_name: string;\n      role_display_name: string;\n      count: number;\n    }>;\n  };\n  last_updated: string;\n}\n\n// =============================================================================\n// MANAGER QUOTA MANAGEMENT TYPES\n// =============================================================================\n\nexport interface ManagerQuotaListResponse {\n  quotas: QuotaResponse[];\n  pagination: {\n    total_count: number;\n    page: number;\n    page_size: number;\n    total_pages: number;\n    has_next: boolean;\n    has_previous: boolean;\n  };\n  department: DepartmentInfo;\n  summary: {\n    total_quotas: number;\n    active_quotas: number;\n    exceeded_quotas: number;\n    near_limit_quotas: number;\n    total_monthly_cost_limit: number;\n    total_monthly_cost_used: number;\n  };\n}\n\nexport interface ManagerQuotaCreateRequest {\n  quota_type: 'cost' | 'tokens' | 'requests';\n  quota_period: 'daily' | 'weekly' | 'monthly' | 'yearly';\n  limit_value: number;\n  name: string;\n  description?: string;\n  llm_config_id?: number;\n  is_enforced?: boolean;\n}\n\nexport interface ManagerQuotaUpdateRequest {\n  limit_value?: number;\n  name?: string;\n  description?: string;\n  is_enforced?: boolean;\n  status?: 'active' | 'inactive' | 'suspended';\n}\n\nexport interface QuotaResetResponse {\n  success: boolean;\n  message: string;\n  quota_id: number;\n  quota_name: string;\n  reset_at: string;\n  previous_usage: number;\n  new_usage: number;\n  quota_status: string;\n}\n\nexport interface DepartmentQuotaStats {\n  department: DepartmentInfo;\n  quota_stats: {\n    total_quotas: number;\n    active_quotas: number;\n    exceeded_quotas: number;\n    near_limit_quotas: number;\n    total_monthly_cost_limit: number;\n    total_monthly_cost_used: number;\n  };\n  last_updated: string;\n}\n\n// =============================================================================\n// DEPARTMENT DASHBOARD TYPES\n// =============================================================================\n\nexport interface DepartmentDashboardData {\n  department: DepartmentInfo;\n  user_stats: {\n    total_users: number;\n    active_users: number;\n    inactive_users: number;\n    recent_users: number;\n    users_by_role: Array<{\n      role_name: string;\n      role_display_name: string;\n      count: number;\n    }>;\n  };\n  quota_stats: {\n    total_quotas: number;\n    active_quotas: number;\n    exceeded_quotas: number;\n    near_limit_quotas: number;\n    total_monthly_cost_limit: number;\n    total_monthly_cost_used: number;\n  };\n  usage_stats: {\n    period_days: number;\n    total_requests: number;\n    total_tokens: number;\n    total_cost: number;\n    avg_response_time_ms: number;\n    daily_trend: Array<{\n      date: string;\n      requests: number;\n      cost: number;\n    }>;\n  };\n  recent_activity: Array<{\n    id: number;\n    user_name: string;\n    user_email: string;\n    llm_provider: string;\n    request_type: string;\n    total_tokens: number;\n    estimated_cost: number;\n    status: string;\n    created_at: string;\n  }>;\n  last_updated: string;\n}\n\n// =============================================================================\n// API FILTER TYPES\n// =============================================================================\n\nexport interface ManagerUserFilters {\n  search_query?: string;\n  role_id?: number;\n  is_active?: boolean;\n  page?: number;\n  page_size?: number;\n  sort_by?: string;\n  sort_order?: 'asc' | 'desc';\n}\n\nexport interface ManagerQuotaFilters {\n  quota_type?: 'cost' | 'tokens' | 'requests';\n  quota_period?: 'daily' | 'weekly' | 'monthly' | 'yearly';\n  status?: 'active' | 'inactive' | 'suspended';\n  is_exceeded?: boolean;\n  page?: number;\n  page_size?: number;\n}\n\n// =============================================================================\n// MANAGER PERMISSION TYPES\n// =============================================================================\n\nexport type ManagerPermission = \n  | 'can_view_users'\n  | 'can_create_department_users'\n  | 'can_edit_users'\n  | 'can_manage_department_users'\n  | 'can_manage_department_quotas'\n  | 'can_view_department_usage'\n  | 'can_reset_department_quotas';\n\nexport interface ManagerCapabilities {\n  can_manage_users: boolean;\n  can_create_users: boolean;\n  can_edit_users: boolean;\n  can_manage_quotas: boolean;\n  can_view_usage: boolean;\n  can_reset_quotas: boolean;\n  department_id: number;\n  department_name: string;\n}\n\n// =============================================================================\n// ERROR TYPES\n// =============================================================================\n\nexport interface ManagerApiError {\n  message: string;\n  code?: string;\n  field?: string;\n}\n\nexport interface ManagerApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: ManagerApiError;\n}\n\n// =============================================================================\n// UTILITY TYPES\n// =============================================================================\n\nexport type ManagerSection = 'dashboard' | 'users' | 'quotas' | 'analytics';\n\nexport interface ManagerNavigationItem {\n  id: ManagerSection;\n  label: string;\n  icon: string;\n  description: string;\n  permission_required?: ManagerPermission;\n}\n\n// =============================================================================\n// FORM TYPES\n// =============================================================================\n\nexport interface UserFormData {\n  email: string;\n  username: string;\n  full_name: string;\n  password?: string;\n  role_id: number;\n  job_title?: string;\n  phone_number?: string;\n  is_active: boolean;\n}\n\nexport interface QuotaFormData {\n  quota_type: 'cost' | 'tokens' | 'requests';\n  quota_period: 'daily' | 'weekly' | 'monthly' | 'yearly';\n  limit_value: number;\n  name: string;\n  description?: string;\n  llm_config_id?: number;\n  is_enforced: boolean;\n}\n\n// =============================================================================\n// COMPONENT PROPS TYPES\n// =============================================================================\n\nexport interface ManagerLayoutProps {\n  children: React.ReactNode;\n  currentSection: ManagerSection;\n  onSectionChange: (section: ManagerSection) => void;\n}\n\nexport interface DepartmentSummaryProps {\n  department: DepartmentInfo;\n  userStats: DepartmentDashboardData['user_stats'];\n  quotaStats: DepartmentDashboardData['quota_stats'];\n  className?: string;\n}\n\nexport interface UserManagementTableProps {\n  users: UserResponse[];\n  onUserEdit: (user: UserResponse) => void;\n  onUserActivate: (userId: number) => void;\n  onUserDeactivate: (userId: number) => void;\n  loading?: boolean;\n  className?: string;\n}\n\nexport interface QuotaManagementTableProps {\n  quotas: QuotaResponse[];\n  onQuotaEdit: (quota: QuotaResponse) => void;\n  onQuotaReset: (quotaId: number) => void;\n  loading?: boolean;\n  className?: string;\n}\n\n// =============================================================================\n// EXPORT ALL TYPES\n// =============================================================================\n\nexport type {\n  // Re-export commonly used types for convenience\n  UserResponse as ManagerUserResponse,\n  QuotaResponse as ManagerQuotaResponse\n};\n